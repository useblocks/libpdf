name: Run tox tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  pytest-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [[3,6], [3,7], [3,8], [3,9]]
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: Set up Python ${{ join(matrix.python-version, '.') }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ join(matrix.python-version, '.') }}

    - name: Install poetry and tox
      run: |
        python -m pip install poetry tox
    - name: Run tox env pytest
      run: |
        tox -e py${{ join(matrix.python-version, '') }}

  pytest-linux:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [[3,6], [3,7], [3,8], [3,9]]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ join(matrix.python-version, '.') }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ join(matrix.python-version, '.') }}

    - name: Install libpoppler-cpp-dev for ubuntu-latest
      run: |
        sudo apt install libpoppler-cpp-dev

    - name: Copy policy file for ubuntu-latest (needed to use ImageMagic in visual debugging tox tests)
      run: |
        sudo cp .github/workflows/policy.xml /etc/ImageMagick-6/policy.xml

    - name: Install poetry and tox
      run: |
        python -m pip install poetry tox
    - name: Run tox env pytest
      run: |
        tox -e py${{ join(matrix.python-version, '') }}

  pytest-macos:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [[3,6], [3,7], [3,8], [3,9]]
        os: [macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ join(matrix.python-version, '.') }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ join(matrix.python-version, '.') }}

    - name: Install ImageMagick on macos-latest
      run: |
        brew install freetype imagemagick

    - name: Install poetry and tox
      run: |
        python -m pip install poetry tox
    - name: Run tox env pytest
      run: |
        tox -e py${{ join(matrix.python-version, '') }}

  flake8_pylint_docs_black:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install libpoppler-cpp-dev
      run: |
        sudo apt install libpoppler-cpp-dev

    - name: Install poetry and tox
      run: |
        python -m pip install poetry tox

    - name: Run tox env flake8
      run: |
        tox -e flake8

    - name: Run tox env pylint
      run: |
        tox -e pylint

    - name: Run tox env docs
      run: |
        tox -e docs

    - name: Run tox env black
      run: |
        tox -e black
